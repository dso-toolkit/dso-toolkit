notes: |
  Het `<table>` component is gebasseerd op Bootstrap’s Table.

  Met de volgende uitzonderingen is de markup identiek aan Bootstrap:

  - Er zijn geen `.table-bordered`, `.table-condensed` en `.table-striped` varianten.
  - Er is geen `tr.primary` en `tr.secondary`.
  - Er is geen `.table-responsive` functionaliteit.
  - Er zijn geen `success`, `info`, `warning` en `danger` row-modifiers.

  Zie [Bootstrap Table](https://getbootstrap.com/docs/3.3/css/#tables).

  Gebruik tabellen om inhoud logisch te structureren, zodat het gemakkelijker wordt om relaties te zien en te begrijpen. Gebruik een tabel nooit om inhoud op een pagina op te maken. Gebruik in plaats daarvan het gridsysteem.
  
  Het component `<table>` wordt als een data-tabel gebruikt of als data-grid.

  ## Hoe component "table" gebruiken als data-tabel
  - Bij het weergeven van logisch gestructureerde informatie
  - Bij het weergeven van “key-value pairs”.
  - Wanneer je **wel** headers kan toekennen.
  - Wanneer er **geen** interactieve elementen zijn om de tabel aan te passen.
  - Een data tabel is daarmee een statische weergave van informatie.
  - Opbouw van data tabel is met native HTML `<table>` tag
  - Gebruik `<th scope="col">` voor koptitels in de kolommen.
  - Gebruik `<th scope="row">` voor koptitels in de rijen.

  {% render '@lib-frame', {path: ('/components/preview/table-data-table' | docPath)} %}

  ## Wanneer gebruik je het component "table" niet

  ### Maak geen layout-tabel
  Gebruik een `<table>` nooit om inhoud op een pagina op te maken. Dit is ook wel bekend als een layout-tabel. Gebruik in plaats daarvan het responsive grid-systeem om inhoud op een pagina op te maken.

  Zie ook: [de layout documentatie]({{ '/docs/fundament/layout' | docPath }})

  ![Voorbeeld van een layout-tabel]({{ '/docs/images/tables/layout-tabel_voorbeeld.png' | docPath }})

  ### Maak geen definition lists met "table"
  - Definition lists worden ook gebruikt om logisch gestructureerde data te tonen. Definition lists worden onder andere gebruikt bij het tonen van meta data.
  - Gebruik een definition list als je **geen** koptitel als header boven de kolom kan plaatsen.
  - Gebruik een  `<table>` als je **wel** een koptitel boven de kolommen kunt plaatsen. De kolom kun je als een groep met een koptitel beschouwen.

  Zie ook: [Definition List]({{ '/components/detail/definition-list' | docPath }})

  {% render '@lib-frame', {path: ('/components/preview/table-definition-list' | docPath)} %}

  {% render '@lib-frame', {path: ('/components/preview/table-header' | docPath)} %}

  ## Hoe component "table" te gebruiken als data-grid
  Een data grid is een dynamischere weergave van informatie.
  Het bevat **wel** interactieve elementen om de tabel aan te passen.

  - Opbouw van data grid is met native HTML `<table>` tag én ARIA table `role="grid"`
  - Gebruik `<th>` om koptitels in header te definiëren.
  - Specifieke keyboard interacties moeten verder worden toegevoegd voor interactieve elementen.

  {% render '@lib-frame', {path: ('/components/preview/table-data-grid' | docPath)} %}


  ### Sorteren in een data-grid
  - Bij het gebruik van `role="grid"` wordt vanuit gegaan dat de data in het data-grid aanpasbaar is. Voeg `aria-readonly="true"` toe, als de data niet aanpasbaar is.
  - Als je een kolom sorteerbaar wilt maken, voeg dan aan `<th>` `"role=columnheader"` toe.
  - - Als je een rij sorteerbaar wilt maken, voeg dan aan `<th>` `"role=rowheader"` toe.
  - Wanneer de sortering oplopend is, geef dit bij `<th>` aan met `aria-sort="ascending"`. Bij aflopende resultaten, gebruik `aria-sort="descending"`.
  - Als er meerdere sorteerbare kolommen of rijen zijn, dan mag er alleen één sortering tegelijk actief zijn met `aria-sort`.
  {% render '@lib-frame', {path: ('/components/preview/table-sortable-readonly' | docPath)} %}


  ## Gedrag en toegankelijkheid
  - Een tabel heeft altijd een `<caption>` nodig. De caption wordt als een titel opgelezen door een screen reader. Indien deze visueel niet wenselijk is wordt deze verborgen met `.sr-only`.
  - Houd de tabel zo eenvoudig mogelijk. Dit verhoogt de begrijpelijkheid van de tabel voor eindgebruikers.
  - Zorg ervoor dat er maximaal één kop niveau is voor de kolommen en maximaal één kop niveau voor de rijen. Screen readers hebben vaak moeite om goed meerdere kop niveaus op te lezen.
  - Gebruik `<th scope="col">` voor koptitels in de kolommen.
  - Gebruik `<th scope="row">` voor koptitels in de rijen.
  - Splits de table in twee losse tables als er twee kop niveaus nodig zijn.


  ## Bronvermelding
  - [WAI-ARIA 1.1 Table](https://w3c.github.io/aria-practices/#table)
  - [WAI-ARIA 1.1 Grid](https://w3c.github.io/aria-practices/#grid)
  - [WAI-ARIA 1.1 ARIA-Sort](https://www.w3.org/TR/wai-aria-1.1/#aria-sort)
  - [Digitoegankelijk](https://www.digitoegankelijk.nl)

status: ready
collated: true
context:
  __title: Default
  modifier: table
  caption: Overzicht van gebruikersnamen
variants:
  - name: caption
    context:
      __title: With caption
      showCaption: true
  - name: hovered
    context:
      __title: Hovered & Active
      modifier: table table-hover
      activeRow: true
  - name: table text left aligned
    context:
      __title: Table text left aligned
      modifier: table dso-text-left
  - name: table text centered
    context:
      __title: Table text centered
      modifier: table dso-text-center
  - name: table text right aligned
    context:
      __title: Table text right aligned
      modifier: table dso-text-right
  - name: column text left aligned
    context:
      __title: Column text left aligned
      modifier: table
      columnAlign: dso-text-left
  - name: column text centered
    context:
      __title: Column text centered
      modifier: table
      columnAlign: dso-text-center
  - name: column text right aligned
    context:
      __title: Column text right aligned
      modifier: table
      columnAlign: dso-text-right
  - name: filtering
    notes: |
      <p>In een tabel kan ook gefilterd worden op basis van gebruikersinvoer doormiddel van een zoekveld boven de tabel. Er wordt direct automatisch gefilterd in de tabel.</p>
    context: 
      __title: Filter
      modifier: table
      filter:
        icon: true
        label: Filteren
        hiddenLabel: true
        placeholder: Tabel doorzoeken
        hideSearchButton: true
      columnHeaders:
        - title: Nummer
        - title: Bron
        - title: Uitleg 
      rowContent:
        - rowHeader: 1
          bron: AQUO
          uitleg: In de Aquo-begrippenset staan begrippen, die worden gebruikt in de watersector.   
        - rowHeader: 2
          bron: BesluitActiviteitenLeefomgeving
          uitleg: Besluit Activiteiten Leefomgeving
        - rowHeader: 3
          bron: BesluitBouwwerkenLeefomgeving
          uitleg: Besluit Bouwwerken Leefomgeving
  - name: no results
    template: noresults
    notes: |
      <p>In een tabel kan ook gefilterd worden op basis van gebruikersinvoer doormiddel van een zoekveld boven de tabel. Er wordt direct automatisch gefilterd in de tabel.</p>
    context:
      __title: Filter no results
      modifier: table
      filter:
        icon: true
        label: Filteren
        hiddenLabel: true
        value: abcdef
        hideSearchButton: true
      columnHeaders:
        - title: Nummer
        - title: Bron
        - title: Uitleg 
      resultError: Geen resultaten gevonden
      cols: 3
  - name: sortable ascending
    notes: |
      <p>In het voorbeeld hieronder is de data oplopend gesorteerd voor de kolom "Nummer". Dit wordt aangeduid met <code>role="columnheader"</code> en <code>aria-sort="ascending"</code>. Daarnaast is de data niet aanpasbaar in dit voorbeeld. Zodoende wordt ook <code>aria-readonly="true"</code> gebruikt.</p>
    context: 
      __title: Sortable ascending
      modifier: table
      sortable: ascending
      caption: Overzicht bronnen
      columnHeaders:
        - title: Nummer
          sort: ascending
        - title: Bron
          sort: true
        - title: Uitleg 
          sort: true
      rowContent:
        - rowHeader: 1
          bron: Omgevingsbesluit  
          uitleg: Omgevingsbesluit
        - rowHeader: 2
          bron: Omgevingswet
          uitleg: Omgevingswet
        - rowHeader: 3
          bron: VNGBegrippenkaderGemeenten
          uitleg: Dit is de bron waar alle VNG begrippen op gebaseerd zijn.
        - rowHeader: 4
          bron: BesluitActiviteitenLeefomgeving
          uitleg: Besluit Activiteiten Leefomgeving
  - name: descending
    notes: |
      <p>In het voorbeeld hieronder is de data aflopend gesorteerd voor de kolom "Nummer". Dit wordt aangeduid met <code>role="columnheader"</code> en <code>aria-sort="descending"</code>. Daarnaast is de data niet aanpasbaar in dit voorbeeld. Zodoende wordt ook <code>aria-readonly="true"</code> gebruikt.</p>
    context:
      __title: Sortable descending
      modifier: table
      sortable: descending
      caption: Overzicht bronnen
      columnHeaders:
        - title: Nummer
          sort: descending
        - title: Bron
          sort: true
        - title: Uitleg 
          sort: true
      rowContent:
        - rowHeader: 4
          bron: BesluitActiviteitenLeefomgeving
          uitleg: Besluit Activiteiten Leefomgeving
        - rowHeader: 3
          bron: VNGBegrippenkaderGemeenten
          uitleg: Dit is de bron waar alle VNG begrippen op gebaseerd zijn.
        - rowHeader: 2
          bron: Omgevingswet
          uitleg: Omgevingswet
        - rowHeader: 1
          bron: Omgevingsbesluit  
          uitleg: Omgevingsbesluit
