@use "sass:math";

@use "../../../../css/src/components/grid/grid.variables" as grid-variables;

$navbar-height:                    50px !default;
$navbar-margin-bottom:             $line-height-computed !default;
$navbar-border-radius:             $border-radius-base !default;
$navbar-padding-horizontal:        math.floor((grid-variables.$grid-gutter-width * 0.5)) !default;
$navbar-padding-vertical:          (($navbar-height - $line-height-computed) * 0.5) !default;

@mixin navbar-vertical-align($element-height) {
  margin-top: (($navbar-height - $element-height) * 0.5);
  margin-bottom: (($navbar-height - $element-height) * 0.5);
}

.navbar {
  // Prevent floats from breaking the navbar
  @include clearfix();

  position: relative;
  min-height: $navbar-height; // Ensure a navbar always shows (e.g., without a .navbar-brand in collapsed mode)
  margin-bottom: $navbar-margin-bottom;
  border: 1px solid transparent;

  @media (min-width: grid-variables.$grid-float-breakpoint) {
    border-radius: $navbar-border-radius;
  }
}

.navbar-nav {
  margin: ($navbar-padding-vertical * 0.5) (-$navbar-padding-horizontal);

  > li > a {
    padding-top: 10px;
    padding-bottom: 10px;
    line-height: $line-height-computed;
  }

  // Uncollapse the nav
  @media (min-width: grid-variables.$grid-float-breakpoint) {
    float: left;
    margin: 0;

    > li {
      float: left;
      > a {
        padding-top: $navbar-padding-vertical;
        padding-bottom: $navbar-padding-vertical;
      }
    }
  }
}

.navbar-text {
  @include navbar-vertical-align($line-height-computed);

  @media (min-width: grid-variables.$grid-float-breakpoint) {
    float: left;
    margin-right: $navbar-padding-horizontal;
    margin-left: $navbar-padding-horizontal;
  }
}

@media (min-width: grid-variables.$grid-float-breakpoint) {
  .navbar-right {
    float: right !important;
    margin-right: -$navbar-padding-horizontal;

    ~ .navbar-right {
      margin-right: 0;
    }
  }
}
