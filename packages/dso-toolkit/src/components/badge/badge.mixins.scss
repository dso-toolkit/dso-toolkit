@use "../../variables/units";
@use "../../variables/colors";
@use "../../global/mixins/set-colors.mixin" as set-colors;

@use "badge.variables" as badge-variables;

@mixin root() {
  border: 1px solid;
  border-radius: 1em;
  display: inline-block;
  font-size: 0.875em;
  line-height: badge-variables.$line-height;
  min-inline-size: 1.5rem;
  padding: #{units.$u1 * 0.5} units.$u1;
  text-align: center;

  & {
    @include set-colors.apply(badge-variables.$default-bg-color, $icons: false, $links: false);
  }

  &.badge-info {
    @include set-colors.apply(badge-variables.$info-bg-color, $icons: false, $links: false);
  }

  &.badge-primary {
    @include set-colors.apply(badge-variables.$primary-bg-color, $icons: false, $links: false);
  }

  &.badge-success {
    @include set-colors.apply(badge-variables.$success-bg-color, $icons: false, $links: false);
  }

  &.badge-warning {
    @include set-colors.apply(badge-variables.$warning-bg-color, $icons: false, $links: false);
  }

  &.badge-danger {
    @include set-colors.apply(badge-variables.$danger-bg-color, $icons: false, $links: false);
  }

  &.badge-error {
    @include set-colors.apply(badge-variables.$error-bg-color, $icons: false, $links: false);
  }

  &.badge-outline {
    @include set-colors.apply(colors.$wit, colors.$grijs-90, $icons: false, $links: false);
  }

  &.badge-attention {
    @include set-colors.apply(badge-variables.$attention-bg-color, $icons: false, $links: false);
  }
}
