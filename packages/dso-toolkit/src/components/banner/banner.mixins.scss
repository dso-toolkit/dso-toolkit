@use "../../variables/units";
@use "../../variables/colors";
@use "../../variables/typography";
@use "../../variables/media-query-breakpoints";

@use "../../di";

@use "banner.variables" as banner-variables;
@use "../../global/mixins/set-colors.mixin" as set-colors;

@mixin _variant($background, $border, $text-color) {
  color: $text-color;
  background-color: $background;
  border-color: $border;
}

@mixin children() {
  a {
    text-decoration: underline;

    &:active {
      text-decoration: none;
    }
  }

  .row {
    > div {
      line-height: typography.$line-height-base;
      position: relative;

      button {
        position: absolute;
        inset-inline-end: units.$u2;
        inset-block-start: 0;

        dso-icon,
        svg.di {
          color: colors.$zwart;
        }
      }

      > .dso-rich-content {
        padding-inline-end: units.$u3;

        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
          color: colors.$zwart;
          font-size: 1rem;
          line-height: typography.$line-height-base;
          margin-block-end: 0;

          + p {
            display: inline;

            + * {
              margin-block-start: units.$u2;
            }
          }
        }

        > h2:first-child {
          float: inline-start;
          margin-inline-end: units.$u1;
        }

        *:first-child {
          margin-block-start: 0;
        }

        *:last-child {
          margin-block-end: 0;
        }
      }
    }
  }
}

@mixin danger() {
  @include set-colors.apply(banner-variables.$danger-bg, banner-variables.$danger-border);
}

@mixin error() {
  @include set-colors.apply(banner-variables.$error-bg, banner-variables.$error-border);
}

@mixin info() {
  @include set-colors.apply(banner-variables.$info-bg, banner-variables.$info-border);
}

@mixin warning() {
  @include set-colors.apply(banner-variables.$warning-bg, banner-variables.$warning-border);
}

@mixin root() {
  padding: units.$u2 0;
  position: relative;

  &.dso-compact {
    padding: 12px 0;
  }
}

@mixin with-icon($variant) {
  .row > div {
    &::before {
      @include di.base("status-#{$variant}");
    }
  }
}
