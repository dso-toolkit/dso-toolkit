@use "../../variables/colors";
@use "../../variables/media-query-breakpoints";
@use "../../variables/units";
@use "../../variables/zindex";

@use "../button";
@use "../rich-content";

@use "modal.variables" as modal-variables;

@keyframes ModalFadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@mixin root() {
  // dialog
  // ------
  // overwrite UA styles:
  overflow: visible;
  padding: 0;
  border: 0;

  &::backdrop {
    background-color: fade-out(modal-variables.$backdrop-bg, modal-variables.$backdrop-opacity);
  }

  .dso-dialog {
    inline-size: modal-variables.$max-width;

    background-color: modal-variables.$content-bg;

    opacity: 1;

    box-shadow: 0 #{units.$u1} #{units.$u3} 0 rgba(25, 25, 25, 0.4);
    animation: 200ms ease-out 0s 1 ModalFadeIn;
  }

  .dso-header {
    position: relative;

    padding: modal-variables.$header-padding;

    border-block-end: 1px solid modal-variables.$border-color;

    h2 {
      max-inline-size: calc(100% - #{units.$u3});

      margin: 0;

      color: colors.$bosgroen;
    }

    .dso-close {
      position: absolute;
      inset-block-start: units.$u2;
      inset-inline-end: 13px;

      block-size: modal-variables.$close-icon-size;
      inline-size: modal-variables.$close-icon-size;

      padding: 0;

      background-color: transparent;

      border: 0;

      text-align: center;
    }
  }

  > .dso-dialog > .dso-body {
    $dso-body-unavailable-height: (2 * modal-variables.$header-padding) +
      (modal-variables.$footer-button-height + modal-variables.$footer-padding);

    @include rich-content.children();

    block-size: calc(100% - #{modal-variables.$body-padding * 2 + units.$u4} - 1.5rem);
    max-block-size: calc(#{modal-variables.$max-height} - #{$dso-body-unavailable-height + units.$u4} - 1.5em);
    min-block-size: 1.5rem;
    overflow-x: auto;

    padding: modal-variables.$body-padding;
  }

  > .dso-dialog > dso-scrollable {
    $dso-body-unavailable-height: (2 * modal-variables.$header-padding) +
      (modal-variables.$footer-button-height + modal-variables.$footer-padding);

    block-size: calc(100% - #{modal-variables.$body-padding * 2 + units.$u4} - 1.5rem);
    max-block-size: calc(#{modal-variables.$max-height} - #{$dso-body-unavailable-height + units.$u4} - 1.5em);
    min-block-size: modal-variables.$body-min-height;

    .dso-body {
      @include rich-content.children();

      padding: modal-variables.$body-padding;
    }
  }

  .dso-body {
    &:focus-visible {
      outline: none;
    }
  }

  .dso-footer {
    @include modal-wide-buttons();

    min-block-size: modal-variables.$footer-button-height + modal-variables.$footer-padding;

    padding: calc(modal-variables.$footer-padding / 2) modal-variables.$footer-padding;

    text-align: end;
  }

  @media screen and (min-width: media-query-breakpoints.$screen-sm-min) {
    .dso-footer {
      #{button.$button-adjacent-secondary} {
        margin-inline-start: units.$u2;
      }

      #{button.$button-adjacent-tertiary} {
        margin-inline-start: 0;
      }
    }
  }

  @media screen and (max-width: media-query-breakpoints.$screen-xs-max) {
    .dso-dialog {
      max-inline-size: 100%;

      margin-block-start: 0;
    }

    .dso-footer {
      #{button.$button-adjacent} {
        margin-inline-start: 0;
      }

      button {
        inline-size: 100%;

        text-align: center;

        + button {
          margin-block-start: units.$u1;
        }

        &.dso-tertiary {
          &,
          span {
            float: none;
          }
        }
      }
    }
  }

  // special query for height
  @media screen and (max-height: modal-variables.$small-modal-vh) {
    .dso-dialog {
      min-block-size: modal-variables.$min-modal-height;

      margin-block-start: units.$u1;
      margin-block-end: units.$u1;
    }

    .dso-header {
      padding: #{units.$u1} #{units.$u2};

      .dso-close {
        inset-block-start: units.$u1;
      }
    }

    .dso-body {
      padding: #{units.$u2} #{units.$u3};
    }

    .dso-footer {
      min-block-size: auto;
      overflow: auto;

      padding: modal-variables.$footer-padding-small-modal-vh modal-variables.$footer-padding;
    }
  }
}

@mixin modal-wide-buttons() {
  @media screen and (max-width: media-query-breakpoints.$screen-xs-max) {
    #{button.$button-adjacent} {
      margin-inline-start: 0;
    }

    button {
      inline-size: 100%;

      text-align: center;

      + button {
        margin-block-start: units.$u1;
      }

      &.dso-tertiary {
        &,
        span {
          float: none;
        }
      }
    }
  }
}

@mixin fullscreen() {
  inline-size: 100dvi;
  block-size: 100dvb;

  .dso-dialog {
    display: flex;
    flex-direction: column;

    inline-size: 100%;
    block-size: 100%;

    > dso-scrollable {
      flex-grow: 1;

      max-block-size: unset;
    }
  }

  .dso-footer {
    flex-shrink: 0;
  }
}
