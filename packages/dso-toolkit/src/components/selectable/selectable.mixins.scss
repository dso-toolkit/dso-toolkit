@use "../../variables/units";
@use "../../variables/colors";
@use "../../variables/zindex";
@use "selectable.variables" as selectable-variables;

@mixin invalid() {
  --dso-selectable-color: #{selectable-variables.$invalid-color};
}

@mixin notLastChild() {
  margin-block-end: units.$u1;
}

@mixin inline($siblingSelectableSelector) {
  + #{$siblingSelectableSelector} {
    margin-inline-start: units.$u3;
  }
}

@mixin root($set-padding: true) {
  position: relative;

  display: var(--dso-selectable-display, block);

  @if ($set-padding) {
    padding-block: 0;
    padding-inline: units.$u4 0;
  }

  label {
    font-weight: 400;
    line-height: selectable-variables.$size;
    margin: 0;
  }

  input[type="checkbox"][disabled],
  input[type="radio"][disabled] {
    @include _selectableFunctionalStylingDisabled();
  }

  input[type="checkbox"],
  input[type="radio"] {
    @include _selectableFunctionalStyling();
  }

  input[type="checkbox"] {
    @include _selectableFunctionalStylingCheckbox();
  }

  input[type="radio"] {
    @include _selectableFunctionalStylingRadio();
  }
}

@mixin children($info-selector) {
  > #{$info-selector} {
    float: none;
    margin-block: units.$u1 0;
    margin-inline: 0 units.$u2;
    inline-size: 100%;
  }

  .dso-selectable-options {
    list-style: none;
    margin-block-start: units.$u1;
    padding-inline-start: 0;

    li + li {
      margin-block-start: units.$u1;
    }
  }
}

@mixin selectableBoxShadow($border-width, $color) {
  box-shadow: 0 0 0 $border-width $color;
  block-size: selectable-variables.$size - 2 * $border-width;
  inset-inline-start: $border-width;
  inset-block-start: $border-width;
  inline-size: selectable-variables.$size - 2 * $border-width;
}

@mixin _selectableFunctionalStylingDisabled() {
  &,
  &:active,
  &:focus {
    + label {
      &::before {
        background-color: colors.$wit;
        box-shadow: 0 0 0 selectable-variables.$border-width selectable-variables.$disabled-color;
      }
    }
  }
}

@mixin _selectableFunctionalStyling() {
  block-size: selectable-variables.$size;
  inset-inline-start: 0;
  margin: 0;
  opacity: 0;
  position: absolute;
  inset-block-start: 0;
  inline-size: selectable-variables.$size;
  z-index: zindex.$selectable;
  zoom: 1;

  @media (prefers-contrast: more) {
    & {
      opacity: 1;
    }
  }

  &:not([disabled]) {
    cursor: pointer;
  }

  + label {
    display: inline;
    font-style: normal;
    padding-inline-start: 0;

    &::before {
      background: colors.$wit;
      border: 0;
      box-shadow: 0 0 0 selectable-variables.$border-width
        var(--dso-selectable-color, selectable-variables.$valid-color);
      content: "";
      block-size: selectable-variables.$size - 2 * selectable-variables.$border-width;
      inset-inline-start: selectable-variables.$border-width;
      position: absolute;
      inset-block-start: selectable-variables.$border-width;
      inline-size: selectable-variables.$size - 2 * selectable-variables.$border-width;
    }
  }

  &:focus {
    outline: 0;

    + label::before {
      box-shadow: 0 0 0 selectable-variables.$focus-border-width
        var(--dso-selectable-color, selectable-variables.$valid-color);
      block-size: selectable-variables.$size - 2 * selectable-variables.$focus-border-width;
      inset-inline-start: selectable-variables.$focus-border-width;
      inset-block-start: selectable-variables.$focus-border-width;
      inline-size: selectable-variables.$size - 2 * selectable-variables.$focus-border-width;
    }
  }

  &:active,
  &.active {
    + label::before {
      background-color: selectable-variables.$active-background-color;
      box-shadow: 0 0 0 1px selectable-variables.$valid-color;
      block-size: selectable-variables.$size - 2px;
      inset-inline-start: 1px;
      inset-block-start: 1px;
      inline-size: selectable-variables.$size - 2px;
    }
  }
}

@mixin _selectableFunctionalStylingCheckbox() {
  + label {
    &::before {
      border-radius: 4px;
    }

    &::after {
      background: transparent;
      content: "";
      inset-inline-start: 6px;
      opacity: 0;
      position: absolute;
      inset-block-start: 6px;
      zoom: 1;
    }
  }

  &:checked,
  &:indeterminate {
    + label {
      &::after {
        opacity: 1;
      }
    }
  }

  &:checked {
    + label {
      &::after {
        border: solid;
        border-color: var(--dso-selectable-color, selectable-variables.$valid-marker-color);
        border-block-start-color: transparent;
        border-width: 0 0 3px 3px;
        block-size: 8px;
        transform: rotate(-45deg);
        inline-size: 13px;
      }
    }
  }

  &:indeterminate {
    + label {
      &::after {
        background-color: var(--dso-selectable-color, selectable-variables.$valid-marker-color);
        block-size: selectable-variables.$indeterminate-size;
        inline-size: selectable-variables.$indeterminate-size;
      }
    }
  }
}

@mixin _selectableFunctionalStylingRadio() {
  + label {
    &::before {
      border-radius: 50%;
    }

    &::after {
      background-color: transparent;
      border-radius: 50%;
      content: "";
      block-size: 12px;
      inset-inline-start: 6px;
      opacity: 0;
      position: absolute;
      inset-block-start: 6px;
      inline-size: 12px;
      zoom: 1;
    }
  }

  &:checked {
    + label {
      &::after {
        background-color: var(--dso-selectable-color, selectable-variables.$valid-marker-color);
        opacity: 1;
      }
    }
  }
}
