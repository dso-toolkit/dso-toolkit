@use "sass:map";

@use "../../di";
@use "../../variables/units";
@use "anchor.variables" as anchor-variables;

@mixin hideIcons() {
  --_dso-di-background-image: none;
  --_dso-anchor-icon-padding-inline-start: 0;
  --_dso-anchor-icon-padding-inline-end: 0;
}

@mixin pseudo() {
  &:hover,
  &:focus-visible {
    color: var(--link-hover-color);
    text-decoration: underline;
  }

  &:active {
    text-decoration: none;
  }
}

@mixin root($is-html-a-element: true) {
  background-color: transparent;
  color: var(--link-color);
  text-decoration: underline;

  @include pseudo();

  :is(dso-icon, svg.di) + span,
  span + :is(dso-icon, svg.di) {
    margin-inline-start: units.$u1;
  }

  @if ($is-html-a-element) {
    &:visited {
      color: var(--link-visited-color);
    }
  } @else {
    cursor: pointer;
  }
}

@mixin clean {
  text-decoration: none;

  &:hover,
  &:focus-visible {
    text-decoration: none;
  }

  &:active {
    text-decoration: underline;
  }
}

@mixin reverse {
  text-decoration: none;

  &:hover,
  &:focus-visible,
  &:active {
    text-decoration: underline;
  }
}

@mixin anchorIcons() {
  @each $mode, $value in anchor-variables.$anchorIcons {
    &#{map.get($value, "selector")} {
      @include _mode-base($value);
    }
  }
}

@mixin _mode-base($anchor-map) {
  $icon-placement: map.get($anchor-map, "icon-placement");

  @if $icon-placement != "after" and $icon-placement != "before" {
    @error 'Use mixin argument "before" or "after".';
  }

  background-repeat: no-repeat;
  background-size: 1.25em 1.25em;

  @if $icon-placement == "before" {
    padding-inline-start: var(--_dso-anchor-icon-padding-inline-start, 1.5em);
    background-position: bottom 0 left 0;
  }

  @if $icon-placement == "after" {
    padding-inline-end: var(--_dso-anchor-icon-padding-inline-end, 1.5em);
    background-position: bottom 0 right 0;
  }

  $icon: if(
    map.has-key($anchor-map, "icon-color"),
    map.get($anchor-map, "icon") + "-" + map.get($anchor-map, "icon-color"),
    map.get($anchor-map, "icon")
  );
  $icon-hover: if(
    map.has-key($anchor-map, "icon-hover-color"),
    map.get($anchor-map, "icon") + "-" + map.get($anchor-map, "icon-hover-color"),
    map.get($anchor-map, "icon")
  );

  @include di.variant($icon);

  @if ($icon != $icon-hover) {
    &:hover,
    &:focus-visible {
      @include di.variant($icon-hover);
    }
  }
}

@mixin mode-download() {
  @include _mode-base(map.get(anchor-variables.$anchorIcons, "download"));
}

@mixin mode-extern() {
  @include _mode-base(map.get(anchor-variables.$anchorIcons, "extern"));
}

@mixin mode-phone() {
  @include _mode-base(map.get(anchor-variables.$anchorIcons, "phone"));
}

@mixin mode-email() {
  @include _mode-base(map.get(anchor-variables.$anchorIcons, "mail"));
}
