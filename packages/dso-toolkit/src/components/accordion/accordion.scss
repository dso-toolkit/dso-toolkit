@use "../../variables/units";
@use "../../variables/colors";
@use "../../variables/typography";
@use "../../components/link";
@use "../../components/accordion";

@use "../../di";

@use "accordion-theme-compact";
@use "accordion-theme-conclusion";
@use "accordion-theme-default";

.dso-accordion {
  margin-block-end: units.$block-spacing-xlarge;

  // dit is een nested accordion.
  .dso-accordion {
    margin-block-end: 0;
  }

  .dso-section-body {
    border-block-start: 0;
    margin-block-start: accordion.$border-radius * -1;
    padding-block: units.$u2 + accordion.$border-radius units.$u2;
    padding-inline: units.$u2;

    > *:first-child:not(.dso-info) {
      margin-block-start: 0;
    }

    > *:last-child:not(.dso-info) {
      margin-block-end: 0;
    }

    .dso-rich-content + .dso-accordion,
    .dso-accordion + .dso-rich-content {
      margin-block-start: units.$u2;
    }
  }

  &.dso-accordion-reverse-align {
    .dso-section-handle {
      a,
      button {
        padding-inline-start: units.$u2;
        padding-inline-end: units.$u6;

        &::before {
          inset-inline: auto 0;
        }

        .dso-icon {
          display: block;
          float: inline-start;
          font-weight: 400;
          margin-inline-start: 0;
          margin-inline-end: units.$u1;
          padding-inline-start: 0;
          text-decoration: underline;
        }
      }
    }
  }

  &:not(.dso-accordion-compact):not(.dso-accordion-conclusion):not(.dso-accordion-compact-black) {
    &,
    .dso-nested-accordion .dso-accordion {
      @include accordion-theme-default.default();
    }
  }

  &.dso-accordion-conclusion {
    &,
    .dso-nested-accordion .dso-accordion {
      @include accordion-theme-conclusion.conclusion();
    }
  }

  &:not(.dso-accordion-compact):not(.dso-accordion-compact-black).dso-accordion-reverse-align .dso-section-handle {
    a::before,
    button::before {
      inset-inline-end: units.$u2;
    }
  }

  &.dso-accordion-compact,
  &.dso-accordion-compact-black {
    &,
    .dso-nested-accordion .dso-accordion {
      @include accordion-theme-compact.compact();
    }

    .dso-accordion-wijzigactie-voegtoe {
      background-color: colors.$lime-20;

      .dso-section-body {
        background-color: colors.$lime-20;
      }
    }

    .dso-accordion-wijzigactie-verwijder {
      text-decoration: line-through;
      background-color: colors.$rood-20;

      .dso-section-body {
        text-decoration: line-through;
        background-color: colors.$rood-20;
      }
    }
  }

  &.dso-accordion-compact-black {
    .dso-accordion-section {
      .dso-section-handle {
        a,
        a:hover,
        button,
        button:hover {
          color: accordion.$compact-black-color;
          &::before {
            @include di.base("chevron-right-zwart", accordion.$chevron-icon-size);
          }
        }
      }
      &.dso-open:not(.dso-nested-accordion) {
        .dso-section-handle {
          a,
          a:hover,
          button,
          button:hover {
            color: accordion.$compact-black-color;
            &::before {
              @include di.base("chevron-down-zwart", accordion.$chevron-icon-size);
            }
          }
        }
      }
      &.dso-accordion-section-activate {
        .dso-section-handle {
          display: flex;
        }

        dso-slide-toggle {
          margin-block-start: accordion.$block-padding - accordion.$compact-border-width;
          margin-inline: units.$u1;

          button.dso-slider {
            padding-inline-start: 0;
          }

          button.dso-slider,
          button.dso-slider:hover {
            &::before,
            &::after {
              content: none;
            }
          }
        }
      }
    }
  }

  &.dso-accordion-compact-black.dso-accordion-reverse-align {
    .dso-accordion-section:not(.dso-open) {
      .dso-section-handle {
        a,
        a:hover,
        button,
        button:hover {
          &::before {
            @include di.base("chevron-down-zwart", accordion.$chevron-icon-size);
          }
        }
      }
    }
    .dso-accordion-section {
      &.dso-open:not(.dso-nested-accordion) {
        .dso-section-handle {
          a,
          a:hover,
          button,
          button:hover {
            &::before {
              @include di.base("chevron-up-zwart", accordion.$chevron-icon-size);
            }
          }
        }
      }
    }
  }

  .dso-section-body dl:last-child {
    margin-block-end: 0;
  }
}

// Section
.dso-section-handle {
  font-weight: 600;
  position: relative;

  a {
    @include link.clean();
  }

  a,
  button {
    align-items: flex-start;
    background-color: transparent;
    border: 0;
    display: flex;
    padding-block: accordion.$block-padding;
    padding-inline: accordion.$chevron-inline-start-offset accordion.$inline-padding;
    text-align: start;
    inline-size: 100%;
    overflow-wrap: anywhere;

    &::before {
      content: "";
      display: inline-block;
      inset-inline-start: units.$u2;
      position: absolute;
    }

    &::after {
      content: "";
      position: absolute;
      inset-inline-end: units.$u2;
      inset-block-start: (accordion.$handle-block-size - accordion.$state-icon-size) * 0.5;
    }

    .dso-section-handle-addons {
      margin-inline-start: auto;
      text-align: end;

      .dso-status,
      .dso-icon {
        font-weight: 400;
        font-size: typography.$font-size-small;
        margin-inline-start: units.$u2;
      }

      dso-attachments-counter,
      .dso-attachments {
        margin-inline-start: units.$u2;
      }

      .dso-attachments {
        &::after {
          @include di.base("paperclip-grijs", accordion.$chevron-icon-size);
        }
      }
    }

    > .dso-label {
      padding-inline-start: units.$u1;
      word-break: normal;

      & + .dso-icon,
      & + .dso-attachments,
      & + .dso-status {
        margin-inline-start: 0;
      }
    }
  }
}

// Create space between sections of the default accordion
// ------------------------------------------------------
:where(.dso-accordion-section) {
  & + & {
    margin-block-start: units.$u1 * 0.5;
  }
}

// exceptions to the rule ^^:
:where(.dso-accordion-compact, .dso-accordion-compact-black) {
  + :where(.dso-accordion-section) {
    margin-block-start: 0;
  }
}

.dso-accordion-section {
  .dso-section-handle,
  > h1.dso-section-handle,
  > h2.dso-section-handle,
  > h3.dso-section-handle,
  > h4.dso-section-handle,
  > h5.dso-section-handle {
    font-size: 1em;
    line-height: accordion.$handle-line-height;
    margin: 0;

    a:active {
      text-decoration: none;
    }
  }

  &.dso-success,
  &.dso-error,
  &.dso-danger,
  &.dso-warning,
  &.dso-info {
    > .dso-section-handle {
      a,
      button {
        padding-inline-end: units.$u7;
      }
    }
  }

  &.dso-success {
    > .dso-section-handle {
      a::after,
      button::after {
        @include di.base("status-success", accordion.$chevron-icon-size);
      }
    }
  }

  &.dso-error {
    > .dso-section-handle {
      a::after,
      button::after {
        @include di.base("status-error", accordion.$chevron-icon-size);
      }
    }
  }

  &.dso-danger {
    > .dso-section-handle {
      a::after,
      button::after {
        @include di.base("status-danger", accordion.$chevron-icon-size);
      }
    }
  }

  &.dso-warning {
    > .dso-section-handle {
      a::after,
      button::after {
        @include di.base("status-warning", accordion.$chevron-icon-size);
      }
    }
  }

  &.dso-info {
    > .dso-section-handle {
      a::after,
      button::after {
        @include di.base("status-info", accordion.$chevron-icon-size);
      }
    }
  }

  &.dso-open {
    &.dso-nested-accordion {
      border-radius: 0 0 accordion.$border-radius accordion.$border-radius;

      > .dso-section-body {
        padding-block: (units.$u2 + accordion.$border-radius - 1) units.$u2; // corrections for missing borders in nested accordion
        padding-inline: (units.$u2 + 1); // corrections for missing borders in nested accordion
      }

      .dso-accordion-section .dso-section-body {
        background-color: colors.$wit;
      }
    }
  }

  &:not(.dso-open) {
    .dso-section-body {
      display: none;
    }
  }
}

// Web component
dso-accordion-section {
  > *:first-child:not(.dso-info) {
    margin-block-start: 0;
  }

  > *:last-child:not(.dso-info) {
    margin-block-end: 0;
  }

  &.dso-accordion-compact:last-child,
  &.dso-accordion-compact-black:last-child {
    border-block-end: 1px solid accordion.$compact-border-color;
  }
}

dso-accordion {
  .dso-rich-content + dso-accordion,
  dso-accordion + .dso-rich-content {
    margin-block-start: units.$u2;
  }
}
