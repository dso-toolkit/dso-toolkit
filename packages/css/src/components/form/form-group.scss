@use "sass:math";

@import "form.variables"; // stylelint-disable-line scss/at-import-partial-extension -- extension is needed because of filesystem based namespacing
@import "form.mixins"; // stylelint-disable-line scss/at-import-partial-extension -- extension is needed because of filesystem based namespacing

@import "../../../../sources/src/styling/variables";
@import "../../../../sources/src/styling/mixins";

.form-group {
  margin-bottom: $form-group-margin-bottom;

  + .form-group:not(.dso-static),
  + .dso-form-buttons {
    margin-top: $dso-form-group-margin;
  }

  &:not(.dso-static) + .form-group.dso-static,
  &.dso-static + .form-group:not(.dso-static) {
    margin-top: $dso-form-group-margin * 0.5;
  }

  &.dso-edit + .form-group {
    margin-top: 0;
  }

  + dl,
  + table,
  + ol,
  + ul,
  + div:not(.form-group):not(.dso-form-buttons) {
    margin-top: $dso-vertical-spacing-xlarge;
  }

  > .dso-info {
    float: left;
    margin: $u2 0;
  }

  .control-label {
    display: inline-block;
    font-weight: bold;
    margin-bottom: $u1;
    max-width: 100%;
    text-align: left;
  }

  legend.dso-label-container,
  legend + .dso-label-container {
    .control-label {
      display: inline;
    }
  }

  legend.dso-label-container {
    border-bottom: 0;
    font-size: $font-size-base;
    margin-bottom: $u1;
  }

  legend + .dso-label-container {
    margin-bottom: $u1;
  }

  &.has-feedback {
    // Enable absolute positioning
    position: relative;

    // Reposition feedback icon if input has visible label above
    label {
      & ~ .form-control-feedback {
        top: ($line-height-computed + 5); // Height of the `label` and its margin
      }

      &.sr-only ~ .form-control-feedback {
        top: 0;
      }
    }

    .form-control {
      padding-right: $u6 - $dso-form-control-border-width; // Feedback icon: 16px padding + 16px size + 16px padding - border
    }

    .form-control-feedback {
      color: $bosgroen;
      display: block;
      height: $input-height-base;
      line-height: $input-height-base;
      pointer-events: none;
      position: absolute;
      right: 0;
      text-align: center;
      top: 0;
      width: $u6;
      z-index: $zx-form-control-feedback; // Ensure icon is above input groups

      dso-icon,
      svg.di {
        margin-top: #{$u1 - 1};
      }
    }
  }

  &.dso-invalid {
    .form-control {
      border-color: $dso-field-invalid-border-color;

      &:focus {
        box-shadow: inset 0 0 0 $dso-form-control-focus-border-width $dso-field-invalid-border-color;
      }
    }

    .dso-message {
      color: $dso-field-invalid-message-color;
      padding-left: $u4;
      position: relative;

      &::before {
        @include di("status-danger", $dso-field-invalid-icon-size);

        content: "";
        display: block;
        left: 0;
        position: absolute;
      }
    }
  }

  .dso-message,
  .dso-help-block {
    margin: $u1 0 0;
  }

  .dso-help-block {
    color: $grijs-60;
    font-style: italic;
  }
}

.form-horizontal .form-group {
  // Make form groups behave like rows
  @include make-row();

  > .dso-label-container {
    @include make-sm-column($dso-label-column);
  }

  > legend + .dso-label-container {
    margin-top: ($padding-base-vertical + 1); // Default padding plus a border;
  }

  > .dso-field-container {
    @include make-sm-column($grid-columns - $dso-label-column);
  }

  &.has-feedback .form-control-feedback {
    right: math.floor(($grid-gutter-width * 0.5));
  }

  > .dso-info {
    margin: $u2;
    width: calc(100% - #{$u4});
  }
}

#{$dso-form-selectors} {
  .dso-field-container {
    position: relative;
  }

  fieldset {
    .dso-label-container {
      > .dso-info {
        font-weight: 400;
        margin-bottom: $u2;
        margin-top: $u1;
      }
    }
  }
}
