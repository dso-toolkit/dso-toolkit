@use "@dso-toolkit/sources/src/variables/units";
@use "@dso-toolkit/sources/src/variables/colors";
@use "@dso-toolkit/sources/src/variables/media-query-breakpoints";
@use "@dso-toolkit/sources/src/variables/scaffolding";
@use "@dso-toolkit/sources/src/variables/typography";

@use "@dso-toolkit/sources/src/components/button";
@use "@dso-toolkit/sources/src/components/rich-content";

@use "@dso-toolkit/sources/src/components/table";

@use "table.mixins" as css-table-mixins;

caption {
  color: colors.$text-muted;
  padding-bottom: table.$cell-padding;
  padding-top: table.$cell-padding;
  text-align: left;
}

td,
th {
  padding: 0;
}

th {
  font-weight: 600;
  text-align: left;
}

table.table {
  td:not(.plain-content),
  th {
    @include rich-content.children();
  }
}

table.table,
.dso-rich-content table {
  margin-bottom: typography.$line-height-computed;
  max-width: 100%;
  width: 100%;

  .dso-tertiary,
  .btn-link {
    position: relative;
    top: -2px;
    white-space: nowrap; // stylelint-disable-line declaration-property-value-disallowed-list -- These actions are always accomponied by icons, we always want the icon next to the text
  }

  &.dso-text-left {
    th,
    td {
      text-align: left;
    }
  }

  &.dso-text-center {
    th,
    td {
      text-align: center;
    }
  }

  &.dso-text-right {
    th,
    td {
      text-align: right;
    }
  }

  &.dso-table-vertical-lines {
    > thead {
      > tr {
        > td,
        > th {
          border: 1px solid table.$th-border-color;
        }
      }
    }

    > tbody,
    > tfoot {
      > tr {
        > td,
        > th {
          border: 1px solid table.$border-color;
        }
      }
    }

    > thead + tbody > tr:first-child {
      > td,
      > th {
        border-top: 0;
      }
    }
  }

  th,
  td {
    &.dso-text-left {
      text-align: left;
    }

    &.dso-text-center {
      text-align: center;
    }

    &.dso-text-right {
      text-align: right;
    }
  }

  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        line-height: typography.$line-height-base;
        padding: (table.$cell-padding * 1.5) table.$cell-padding;
        vertical-align: top;

        a {
          text-decoration: underline;
        }
      }
    }
  }

  > thead {
    > tr {
      > td,
      > th {
        border-bottom: 1px solid table.$th-border-color;
      }
    }
  }

  > tbody,
  > tfoot {
    > tr {
      > td,
      > th {
        border-bottom: 1px solid table.$border-color;
      }
    }
  }

  // Account for multiple tbody instances
  > tbody + tbody {
    border-top: 2px solid table.$border-color;
  }

  // Nesting
  .table {
    background-color: scaffolding.$body-bg;
  }

  // error after filtering
  > tbody > tr.result-error {
    td {
      font-style: italic;
    }
  }

  // sortable table
  > thead > tr > th {
    // Bottom align for column headings
    vertical-align: bottom;

    #{button.$buttons} {
      &.dso-sort {
        color: colors.$grijs-90;
        font-weight: 600;

        dso-icon,
        svg.di {
          color: colors.$grijs-60;

          &.dso-sort-active {
            color: colors.$grijs-90;
          }
        }
      }
    }
  }
}

// Hover effect. Placed here since it has to come after the potential zebra striping

.table-hover {
  > tbody > tr:hover {
    background-color: table.$background-color-hover;
  }
}

// Table cell sizing. Reset default table behavior

table col[class*="col-"] {
  display: table-column;
  float: none;
  position: static;
}

table {
  background-color: table.$background-color;
  border-collapse: collapse;
  border-spacing: 0;

  td,
  th {
    &[class*="col-"] {
      display: table-cell;
      float: none;
      position: static;
    }
  }
}

// Generate the contextual variants
@include css-table-mixins.row-variant("active", table.$background-color-active);

.dso-table-responsive,
.dso-table-scroll-container {
  min-height: 0.01%;
  overflow-x: auto;
  position: relative;
}

.dso-table-scroll-container {
  @include css-table-mixins.responsive();
}

.dso-table-responsive {
  @media screen and (max-width: media-query-breakpoints.$screen-xs-max) {
    @include css-table-mixins.responsive();
  }
}

.dso-table-filter-wrapper {
  .dso-search-bar {
    margin-bottom: units.$u2;
    width: table.$filter-wrapper-width - units.$u4;
  }
}

// Web component
dso-table table.table {
  margin-bottom: 0;
}

dso-table.dso-is-responsive {
  margin-bottom: 0;

  > .table {
    // Ensure the content doesn't wrap
    > thead,
    > tbody,
    > tfoot {
      > tr {
        > th,
        > td {
          white-space: nowrap; // stylelint-disable-line declaration-property-value-disallowed-list -- Can't have responsive tables without
        }
      }
    }
  }
}
