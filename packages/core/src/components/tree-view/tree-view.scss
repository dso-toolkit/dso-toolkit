@use "sass:math";

@use "~dso-toolkit/src/utilities";
@use "~dso-toolkit/src/variables/colors";
@use "~dso-toolkit/src/variables/scaffolding";

@use "tree-view.mixins" as core-tree-view-mixins;
@use "tree-view.variables" as core-tree-view-variables;

:host {
  ul {
    list-style-type: none;
    padding-inline-start: core-tree-view-variables.$indent;
    position: relative;
  }

  li {
    position: relative;
  }

  ul[role="tree"] {
    padding-left: 0;
  }

  // connects branch or leaf to parent
  ul[role="group"]::before {
    @include core-tree-view-mixins.vertical-line(
      core-tree-view-variables.$indent + core-tree-view-variables.$hcenter,
      0,
      core-tree-view-variables.$vspace
    );
  }

  li:not(.has-child) {
    // horizontal connector for a leaf
    &::before {
      @include core-tree-view-mixins.horizontal-line(
        core-tree-view-variables.$hcenter,
        core-tree-view-variables.$vcenter,
        core-tree-view-variables.$hspace + 0.5 * core-tree-view-variables.$icon-size - 4px
      );
    }

    // vertical connector for a leaf
    &::after {
      @include core-tree-view-mixins.vertical-line(
        core-tree-view-variables.$hcenter,
        core-tree-view-variables.$vspace,
        100%
      );
    }

    // vertical connector for the last leaf
    &:last-child::after {
      height: core-tree-view-variables.$vcenter;
      top: 0;
    }
  }

  li.has-child {
    // horizontal connector for a branch
    &::before {
      @include core-tree-view-mixins.horizontal-line(
        core-tree-view-variables.$icon-size,
        core-tree-view-variables.$vcenter,
        core-tree-view-variables.$hspace - 4px
      );
    }

    // vertical connector for a branch (not last)
    &:not(:last-child)::after {
      @include core-tree-view-mixins.vertical-line(
        core-tree-view-variables.$hcenter,
        core-tree-view-variables.$vcenter + 0.5 * core-tree-view-variables.$icon-size,
        calc(100% - core-tree-view-variables.$icon-size)
      );
    }

    // vertical line after a expanded branch (creating dead ends)
    &.is-expanded:last-child::after {
      @include core-tree-view-mixins.vertical-line(
        core-tree-view-variables.$hcenter,
        core-tree-view-variables.$vcenter + 0.5 * core-tree-view-variables.$icon-size,
        calc(100% - (core-tree-view-variables.$vcenter + 0.5 * core-tree-view-variables.$icon-size))
      );
    }
  }

  .tree-branch-control {
    color: colors.$grasgroen;
    display: inline-block;
    font-size: math.div(2 * core-tree-view-variables.$icon-size, 3);
    margin: core-tree-view-variables.$vspace core-tree-view-variables.$hspace core-tree-view-variables.$vspace 0;
    vertical-align: top;

    > div {
      cursor: pointer;
    }
  }

  .tree-content {
    cursor: pointer;
    display: inline-block;
    margin: core-tree-view-variables.$vspace 0;
    max-width: calc(100% - (core-tree-view-variables.$indent + core-tree-view-variables.$hspace));

    a {
      color: scaffolding.$text-color;
      text-decoration: underline;

      &:hover,
      &:focus {
        color: scaffolding.$text-color;
        text-decoration: none;
      }

      &:active {
        text-decoration: none;
      }
    }

    &.selected {
      color: scaffolding.$text-color;
      font-weight: 700;
      text-decoration: underline;

      &:hover,
      &:focus {
        text-decoration: none;
      }
    }

    &.active {
      color: colors.$mauve;
      font-style: italic;
      font-weight: 700;

      text-decoration: underline;

      &:hover,
      &:focus {
        text-decoration: none;
      }

      a {
        color: colors.$mauve;

        &:hover,
        &:focus {
          text-decoration: none;
        }
      }
    }

    dso-icon {
      color: colors.$grasgroen;
      font-size: 0.75em;
      margin-left: 0.5em;
      vertical-align: text-bottom;
    }
  }
}

@include utilities.box-sizing();

.sr-only {
  @include utilities.sr-only();
}
