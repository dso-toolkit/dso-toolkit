@use "~dso-toolkit/src/components/grid" as css-grid;

@use "~dso-toolkit/src/utilities";
@use "~dso-toolkit/src/variables/units";
@use "~dso-toolkit/src/variables/colors";
@use "~dso-toolkit/src/variables/media-query-breakpoints";
@use "~dso-toolkit/src/variables/zindex";
@use "~dso-toolkit/src/components/button";
@use "~dso-toolkit/src/components/headings";
@use "~dso-toolkit/src/components/navbar";

@use "viewer-grid.variables" as core-viewer-grid-variables;

@include utilities.box-sizing();

:host([mode="vdk"]) {
  .overlay {
    height: calc(100% - units.$u4);
    margin-block: units.$u2;
    margin-inline: auto units.$u2;
  }
}

button {
  @include button.element();
}

.sr-only {
  @include utilities.sr-only();
}

.shrink,
.expand,
.overlay-close-button {
  @include button.tertiary($modifiers: false);

  &:hover {
    cursor: pointer;
  }
}

.overlay-close-button {
  position: absolute;
  top: units.$u1;
  right: css-grid.$grid-gutter-width * 0.5;
}

.content.invisible {
  visibility: hidden;
}

.dso-main-panel,
.dso-document-panel {
  .content {
    height: 100%;
    padding: 0 css-grid.$grid-gutter-width * 0.5 units.$u1;
  }
}

.dso-main-panel {
  background-color: colors.$wit;
  flex-shrink: 0;
  flex-grow: 0;
  position: relative;
  transition: flex-basis core-viewer-grid-variables.$transition-time ease-in,
    max-width core-viewer-grid-variables.$transition-time ease-in,
    min-width core-viewer-grid-variables.$transition-time ease-in;
  z-index: zindex.$viewer-grid-main-panel;

  &.compact,
  &.expanded {
    &.collapsed {
      left: -432px;
    }
  }

  &.compact {
    flex-shrink: unset;
    flex-grow: unset;
    position: absolute;
    transition: none;
  }

  &.expanded.collapsed {
    position: absolute;
    height: 100%;
  }

  .dso-filterblok-address {
    font-weight: bold;
    margin: units.$u1 0;
  }

  .sizing-buttons,
  .toggle-button {
    left: calc(100% + 1px);
    transition: left core-viewer-grid-variables.$transition-time ease-in;
    padding: 0 units.$u1 * 0.5 units.$u1 * 0.5 0;

    button {
      border-bottom-right-radius: 4px;
      border-top-right-radius: 4px;
    }
  }

  .expand-button {
    @include button.tertiary($modifiers: false);

    padding-block: units.$u2;
  }
}

.dso-document-panel {
  background-color: colors.$wit;
  flex-shrink: 0;
  flex-grow: 0;
  position: relative;
  transition: flex-basis core-viewer-grid-variables.$transition-time ease-in,
    max-width core-viewer-grid-variables.$transition-time ease-in,
    min-width core-viewer-grid-variables.$transition-time ease-in;
  z-index: zindex.$viewer-grid-main-panel;

  .sizing-buttons {
    right: calc(100% + 1px);
    transition: right core-viewer-grid-variables.$transition-time ease-in;
    padding: 0 0 units.$u1 * 0.5 units.$u1 * 0.5;

    button {
      border-bottom-left-radius: 4px;
      border-top-left-radius: 4px;
    }
  }
}

.sizing-buttons,
.toggle-button {
  overflow-x: hidden;
  position: absolute;
  top: core-viewer-grid-variables.$sizing-buttons-top;
  width: core-viewer-grid-variables.$resize-button-size + units.$u1 * 0.5;
  z-index: zindex.$viewer-grid-sizing-buttons;

  button {
    @include button.secondary($modifiers: false, $icon-only: true);
    @include button.map-focus();

    border: 0;
    padding: 8px;
    border-radius: 0;
    box-shadow: 0 1px units.$u1 * 0.5 0 rgba(0, 0, 0, 0.4);
    flex: 0 0 100%;
    height: core-viewer-grid-variables.$resize-button-size;
    min-width: auto;
    width: core-viewer-grid-variables.$resize-button-size;

    &:hover {
      dso-icon {
        color: colors.$wit;
      }
    }
  }
}

.dso-document-panel .sizing-buttons {
  top: calc(50vh - #{core-viewer-grid-variables.$resize-button-size});
}

.map {
  height: 100%;
  width: 100%;
  overflow: hidden;
  position: relative;
}

.filterpanel,
.overlay {
  background-color: colors.$wit;
  border: 0;
  height: 100%;
  margin-block: 0;
  max-height: 100vh;
  overflow-y: auto;
  z-index: zindex.$viewer-grid-main-panel + 1;
}

.filterpanel {
  padding: units.$u1 css-grid.$grid-gutter-width * 0.5;
  left: 0;

  @media screen and (max-width: core-viewer-grid-variables.$filterpanel-width) {
    width: 100vw;

    &::before {
      display: none !important;
    }
  }

  h1 {
    @include headings.base();
    @include headings.margin-large();
    @include headings.h1();
  }
}

.overlay {
  padding: units.$u5 css-grid.$grid-gutter-width * 0.5 units.$u1;
  right: 0;
  width: core-viewer-grid-variables.$overlay-width;

  &::backdrop {
    background-color: rgba(0, 0, 0, 0.5);
  }

  @media screen and (max-width: core-viewer-grid-variables.$overlay-width) {
    width: 100vw;
  }
}

.filterpanel-buttons {
  text-align: right;

  .cancel-button {
    @include button.secondary($modifiers: false);
    @include button.small();
  }

  .apply-button {
    @include button.primary($modifiers: false);
    @include button.small();
  }

  .cancel-button + .apply-button {
    margin-left: units.$u2;
  }
}

@media screen and (min-width: #{media-query-breakpoints.$screen-sm-min + units.$u5}) {
  :host([main-size="small"]) .dso-main-panel,
  :host([document-panel-size="small"]) .dso-document-panel {
    flex-basis: core-viewer-grid-variables.$small;
    min-width: 0;
    max-width: core-viewer-grid-variables.$small;

    @media screen and (max-width: core-viewer-grid-variables.$small) {
      flex-basis: 100vw;
      max-width: 100vw;
      min-width: 0;
      transition: none;
    }
  }

  :host([main-size="medium"]) .dso-main-panel,
  :host([document-panel-size="medium"]) .dso-document-panel {
    flex-basis: core-viewer-grid-variables.$medium;
    min-width: core-viewer-grid-variables.$small;
    max-width: core-viewer-grid-variables.$medium;

    @media screen and (max-width: core-viewer-grid-variables.$medium) {
      flex-basis: 100vw;
      max-width: 100vw;
      min-width: core-viewer-grid-variables.$small;
      transition: none;
    }
  }

  :host([main-size="large"]) .dso-main-panel,
  :host([document-panel-size="large"]) .dso-document-panel {
    flex-basis: core-viewer-grid-variables.$large;
    min-width: core-viewer-grid-variables.$large-min;
    max-width: core-viewer-grid-variables.$large-max;

    @media screen and (max-width: core-viewer-grid-variables.$large-min) {
      flex-basis: 100vw;
      max-width: 100vw;
      min-width: core-viewer-grid-variables.$large-min;
      transition: none;
    }
  }

  :host {
    display: flex;
    height: 100vh;
    overflow: hidden;
    position: relative;

    .dso-main-panel.compact,
    .dso-main-panel.expanded {
      flex-basis: unset;
      min-width: unset;
      max-width: unset;
      width: 440px;

      .content {
        height: auto;
        overflow-y: auto;
      }
    }
  }

  .dso-main-panel,
  .dso-document-panel {
    box-shadow: units.$u1 * 0.25 0 units.$u1 0 rgba(0, 0, 0, 0.4);

    .content {
      overflow-y: scroll;
    }
  }

  .filterpanel {
    box-shadow: 2px 0 5px colors.$grijs-60;
    margin-inline: 0 auto;
    max-width: core-viewer-grid-variables.$filterpanel-max-width;
    width: calc(100vw - 40px);

    &::before {
      content: "";
      display: block;
      position: fixed;
      top: 0;
      bottom: 0;
      right: 0;
      left: core-viewer-grid-variables.$filterpanel-max-width;
      background-color: rgba(0, 0, 0, 0.5);

      @media screen and (max-width: #{core-viewer-grid-variables.$filterpanel-max-width + 40px}) {
        left: auto;
        width: 40px;
      }
    }
  }

  .overlay {
    box-shadow: -2px 0 5px colors.$grijs-60;
    margin-inline: auto 0;
  }
}

@media screen and (max-width: #{media-query-breakpoints.$screen-xs-max + units.$u5 + 0.99}) {
  @include navbar.root();

  .dso-navbar {
    padding-inline: units.$u2;
  }

  .dso-nav {
    @include navbar.nav-border();

    display: flex;
    gap: units.$u2;
    margin-block-start: 0;
    width: calc(100vw - units.$u4);
  }

  .dso-tertiary {
    @include button.tertiary($modifiers: false);

    font-weight: 300;
  }

  .filterpanel,
  .overlay {
    margin-inline: 0;
    max-width: 100vw;
    top: 0;
    width: 100vw;
  }
}
