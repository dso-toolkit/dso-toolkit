@use "~dso-toolkit/src/components/grid" as css-grid;

@use "~dso-toolkit/src/utilities";
@use "~dso-toolkit/src/variables/units";
@use "~dso-toolkit/src/variables/colors";
@use "~dso-toolkit/src/variables/media-query-breakpoints";
@use "~dso-toolkit/src/variables/zindex";
@use "~dso-toolkit/src/components/button";
@use "~dso-toolkit/src/components/heading";
@use "~dso-toolkit/src/components/navbar";

@use "viewer-grid.variables" as core-viewer-grid-variables;

@include utilities.box-sizing();

:host([mode="vdk"]) {
  .overlay {
    block-size: calc(100% - units.$u4);
    margin-block: units.$u2;
    margin-inline: auto units.$u2;
  }
}

button {
  @include button.element();
}

.sr-only {
  @include utilities.sr-only();
}

.shrink,
.expand,
.overlay-close-button {
  @include button.tertiary($modifiers: false);

  &:hover {
    cursor: pointer;
  }
}

.overlay-close-button {
  position: absolute;
  inset-block-start: units.$u1;
  inset-inline-end: css-grid.$grid-gutter-width * 0.5;
}

.content.invisible {
  visibility: hidden;
}

.dso-main-panel,
.dso-document-panel {
  .content {
    block-size: 100%;
    padding-block: 0;
    padding-inline: css-grid.$grid-gutter-width * 0.5;
  }
}

.dso-main-panel {
  background-color: colors.$wit;
  flex-shrink: 0;
  flex-grow: 0;
  position: relative;
  transition:
    flex-basis core-viewer-grid-variables.$transition-time ease-in,
    max-inline-size core-viewer-grid-variables.$transition-time ease-in,
    min-inline-size core-viewer-grid-variables.$transition-time ease-in;
  z-index: zindex.$viewer-grid-main-panel;

  &.compact,
  &.expanded {
    &.collapsed {
      inset-inline-start: -432px;
    }
  }

  &.compact,
  &.contracted {
    flex-shrink: unset;
    flex-grow: unset;
    position: absolute;
    transition: none;
  }

  &.expanded.collapsed {
    position: absolute;
    block-size: 100%;
  }

  .dso-filterblok-address {
    font-weight: bold;
    margin-block: units.$u1;
    margin-inline: 0;
  }

  .sizing-buttons,
  .toggle-button {
    inset-inline-start: calc(100% + 1px);
    transition: inset-inline-start core-viewer-grid-variables.$transition-time ease-in;
    padding-block: 0 units.$u1;
    padding-inline: 0 units.$u1 * 0.5;

    button {
      border-end-end-radius: 4px;
      border-start-end-radius: 4px;
    }
  }
}

:host[mode="vdk"] {
  .dso-main-panel {
    transition:
      min-inline-size core-viewer-grid-variables.$transition-time ease-in,
      margin-inline-start core-viewer-grid-variables.$transition-time ease-in;
  }
}

.dso-document-panel {
  background-color: colors.$wit;
  flex-shrink: 0;
  flex-grow: 0;
  position: relative;
  transition:
    flex-basis core-viewer-grid-variables.$transition-time ease-in,
    max-inline-size core-viewer-grid-variables.$transition-time ease-in,
    min-inline-size core-viewer-grid-variables.$transition-time ease-in;
  z-index: zindex.$viewer-grid-main-panel;

  .sizing-buttons {
    inset-block-start: auto;
    inset-block-end: core-viewer-grid-variables.$sizing-buttons-block-start;
    inset-inline-end: calc(100% + 1px);
    transition: inset-inline-end core-viewer-grid-variables.$transition-time ease-in;
    padding-block: 0 units.$u1;
    padding-inline: units.$u1 * 0.5 0;

    button {
      border-end-start-radius: 4px;
      border-start-start-radius: 4px;
    }
  }
}

.sizing-buttons,
.toggle-button {
  overflow-x: hidden;
  position: absolute;
  inset-block-start: core-viewer-grid-variables.$sizing-buttons-block-start;
  inline-size: core-viewer-grid-variables.$resize-button-size + units.$u1 * 0.5;
  z-index: zindex.$viewer-grid-sizing-buttons;

  button {
    @include button.secondary($modifiers: false, $icon-only: true);

    // stylelint-disable-next-line no-duplicate-selectors -- needed to fix sass deprecation warnings: #2724
    & {
      border: 0;
      padding: 8px;
      border-radius: 0;
      box-shadow: 0 1px units.$u1 * 0.5 0 rgba(0, 0, 0, 0.4);
      flex: 0 0 100%;
      block-size: core-viewer-grid-variables.$resize-button-size;
      min-inline-size: auto;
      inline-size: core-viewer-grid-variables.$resize-button-size;
    }

    &:hover {
      dso-icon {
        color: colors.$wit;
      }
    }

    &:focus-visible {
      outline-offset: -1px;
    }
  }
}

.map {
  block-size: 100%;
  inline-size: 100%;
  overflow: hidden;
  position: relative;
}

.filterpanel,
.overlay {
  background-color: colors.$wit;
  border: 0;
  block-size: 100%;
  margin-block: 0;
  max-block-size: 100vh;
  overflow-y: auto;
  z-index: zindex.$viewer-grid-main-panel + 1;
}

.filterpanel {
  padding-block: units.$u1;
  padding-inline: css-grid.$grid-gutter-width * 0.5;
  inset-inline-start: 0;

  @media screen and (max-width: core-viewer-grid-variables.$filterpanel-inline-size) {
    inline-size: 100vw;

    &::before {
      display: none !important;
    }
  }

  h1 {
    @include heading.base();
    @include heading.margin-large();
    @include heading.h1();
  }
}

.filterpanel-vdk {
  display: block;
  position: fixed;
  inset-block-start: 0;
  inset-inline-start: calc(core-viewer-grid-variables.$filterpanel-vdk-max-inline-size * -1);
  block-size: 100%;
  inline-size: 100%;
  transition: inset-inline-start core-viewer-grid-variables.$transition-time ease-in;

  @media screen and (min-width: #{media-query-breakpoints.$screen-md-min}) {
    max-inline-size: core-viewer-grid-variables.$filterpanel-vdk-max-inline-size;
  }

  &[open] {
    inset-inline-start: 0;
    box-shadow: none;
    border-inline-end: 1px solid core-viewer-grid-variables.$filterpanel-vdk-border-color;
  }

  h3 {
    color: colors.$bosgroen;
  }

  .dso-close {
    @include button.element();

    position: absolute;
    inset-block-start: units.$u2;
    inset-inline-end: units.$u2;

    block-size: units.$u4;
    inline-size: units.$u4;

    padding: 0;

    background-color: transparent;

    border: 0;
    text-align: center;
  }
}

.overlay {
  padding-block: units.$u5 units.$u1;
  padding-inline: css-grid.$grid-gutter-width * 0.5;
  inset-inline-end: 0;
  inline-size: core-viewer-grid-variables.$overlay-inline-size;

  &::backdrop {
    background-color: rgba(0, 0, 0, 0.5);
  }

  @media screen and (max-width: core-viewer-grid-variables.$overlay-inline-size) {
    inline-size: 100vw;
  }
}

.filterpanel-buttons {
  text-align: end;

  .cancel-button {
    @include button.secondary($modifiers: false);
    @include button.small();
  }

  .apply-button {
    @include button.primary($modifiers: false);
    @include button.small();
  }

  .cancel-button + .apply-button {
    margin-inline-start: units.$u2;
  }
}

@media screen and (min-width: #{media-query-breakpoints.$screen-sm-min + units.$u5}) {
  :host([main-size="small"]) .dso-main-panel,
  :host([document-panel-size="small"]) .dso-document-panel {
    flex-basis: core-viewer-grid-variables.$small;
    min-inline-size: 0;
    max-inline-size: core-viewer-grid-variables.$small;

    @media screen and (max-width: core-viewer-grid-variables.$small) {
      flex-basis: 100vw;
      max-inline-size: 100vw;
      min-inline-size: 0;
      transition: none;
    }
  }

  :host([main-size="medium"]) .dso-main-panel,
  :host([document-panel-size="medium"]) .dso-document-panel {
    flex-basis: core-viewer-grid-variables.$medium;
    min-inline-size: core-viewer-grid-variables.$small;
    max-inline-size: core-viewer-grid-variables.$medium;

    @media screen and (max-width: core-viewer-grid-variables.$medium) {
      flex-basis: 100vw;
      max-inline-size: 100vw;
      min-inline-size: core-viewer-grid-variables.$small;
      transition: none;
    }
  }

  :host([main-size="large"]) .dso-main-panel,
  :host([document-panel-size="large"]) .dso-document-panel {
    flex-basis: core-viewer-grid-variables.$large;
    min-inline-size: core-viewer-grid-variables.$large-min;
    max-inline-size: core-viewer-grid-variables.$large-max;

    @media screen and (max-width: core-viewer-grid-variables.$large-min) {
      flex-basis: 100vw;
      max-inline-size: 100vw;
      min-inline-size: core-viewer-grid-variables.$large-min;
      transition: none;
    }
  }

  :host {
    display: flex;
    block-size: 100vh;
    overflow: hidden;
    position: relative;

    .dso-main-panel.compact,
    .dso-main-panel.expanded {
      flex-basis: unset;
      min-inline-size: unset;
      max-inline-size: unset;
      inline-size: 440px;

      .content {
        block-size: auto;
        overflow-y: auto;
      }
    }
  }

  .dso-main-panel,
  .dso-document-panel {
    box-shadow: units.$u1 * 0.25 0 units.$u1 0 rgba(0, 0, 0, 0.4);

    .content {
      overflow-y: auto;
    }
  }

  .filterpanel {
    margin-inline: 0 auto;
    inline-size: calc(100vw - 40px);

    &[open] {
      box-shadow: 2px 0 5px colors.$grijs-60;
    }

    &.filterpanel-vrk {
      max-inline-size: core-viewer-grid-variables.$filterpanel-max-inline-size;

      &::before {
        content: "";
        display: block;
        position: fixed;
        inset-block-start: 0;
        inset-block-end: 0;
        inset-inline-end: 0;
        inset-inline-start: core-viewer-grid-variables.$filterpanel-max-inline-size;
        background-color: rgba(0, 0, 0, 0.5);

        @media screen and (max-width: #{core-viewer-grid-variables.$filterpanel-max-inline-size + 40px}) {
          inset-inline-start: auto;
          inline-size: 40px;
        }
      }
    }
  }

  .filterpanel-vdk[open] {
    box-shadow: none;
    border-inline-end: 1px solid core-viewer-grid-variables.$filterpanel-vdk-border-color;
  }

  .overlay {
    box-shadow: -2px 0 5px colors.$grijs-60;
    margin-inline: auto 0;
  }

  @media screen and (max-width: #{media-query-breakpoints.$screen-sm-max + units.$u5 + 0.99}) {
    :host([filterpanel-open][mode="vdk"]) {
      .dso-main-panel {
        margin-inline-start: core-viewer-grid-variables.$filterpanel-vdk-max-inline-size;
        max-inline-size: calc(100vw - #{core-viewer-grid-variables.$filterpanel-vdk-max-inline-size});
      }
    }

    .filterpanel-vdk {
      inline-size: core-viewer-grid-variables.$filterpanel-vdk-max-inline-size;
      inset-inline-start: -(core-viewer-grid-variables.$filterpanel-vdk-max-inline-size);
    }
  }
}

@media screen and (max-width: #{media-query-breakpoints.$screen-xs-max + units.$u5 + 0.99}) {
  @include navbar.root();

  .dso-navbar {
    padding-inline: units.$u2;
  }

  .dso-nav {
    @include navbar.nav-border();

    display: flex;
    gap: units.$u2;
    margin-block-start: 0;
    inline-size: calc(100vw - units.$u4);
  }

  .dso-tertiary {
    @include button.tertiary($modifiers: false);

    // stylelint-disable-next-line no-duplicate-selectors -- needed to fix sass deprecation warnings: #2724
    & {
      font-weight: 300;
    }
  }

  .filterpanel,
  .overlay {
    margin-inline: 0;
    max-inline-size: 100vw;
    inset-block-start: 0;
    inline-size: 100vw;
  }

  .filterpanel-vdk {
    inline-size: 100vw;
    inset-inline-start: -100vw;
  }
}

@media screen and (min-width: #{media-query-breakpoints.$screen-md-min}) {
  :host([filterpanel-open][mode="vdk"]) {
    .dso-main-panel {
      margin-inline-start: core-viewer-grid-variables.$filterpanel-vdk-max-inline-size;
    }
  }
}
