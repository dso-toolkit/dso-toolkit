@use "~@dso-toolkit/css/src/components/grid" as css-grid;

@use "~@dso-toolkit/sources/src/utilities";
@use "~@dso-toolkit/sources/src/variables/units";
@use "~@dso-toolkit/sources/src/variables/colors";
@use "~@dso-toolkit/sources/src/variables/zindex";
@use "~@dso-toolkit/sources/src/components/button";

@use "viewer-grid.variables" as core-viewer-grid-variables;

@include utilities.box-sizing();

:host {
  display: flex;
  height: 100vh;
  overflow: hidden;
  position: relative;
}

:host([small]) {
  .dso-map-panel {
    flex-basis: core-viewer-grid-variables.$small;
    min-width: 0;
    max-width: core-viewer-grid-variables.$small;

    @media screen and (max-width: core-viewer-grid-variables.$small) {
      flex-basis: 100vw;
      max-width: 100vw;
      min-width: 0;
      transition: none;
    }
  }
}

:host([medium]) {
  .dso-map-panel {
    flex-basis: core-viewer-grid-variables.$medium;
    min-width: core-viewer-grid-variables.$small;
    max-width: core-viewer-grid-variables.$medium;

    @media screen and (max-width: core-viewer-grid-variables.$medium) {
      flex-basis: 100vw;
      max-width: 100vw;
      min-width: core-viewer-grid-variables.$small;
      transition: none;
    }
  }
}

:host([large]) {
  .dso-map-panel {
    flex-basis: core-viewer-grid-variables.$large;
    min-width: core-viewer-grid-variables.$large-min;
    max-width: core-viewer-grid-variables.$large-max;

    @media screen and (max-width: core-viewer-grid-variables.$large-min) {
      flex-basis: 100vw;
      max-width: 100vw;
      min-width: core-viewer-grid-variables.$large-min;
      transition: none;
    }
  }
}

button {
  @include button.element();
}

.sr-only {
  @include utilities.sr-only();
}

.shrink,
.expand,
.overlay-close-button {
  @include button.tertiary($modifiers: false);

  &:hover {
    cursor: pointer;
  }

  &[disabled] {
    display: none;
  }
}

.overlay-close-button {
  position: absolute;
  top: units.$u1;
  right: css-grid.$grid-gutter-width * 0.5;
}

.dso-map-panel {
  background-color: colors.$wit;
  box-shadow: units.$u1 * 0.25 0 units.$u1 0 rgba(0, 0, 0, 0.4);
  flex-shrink: 0;
  flex-grow: 0;
  padding-right: units.$u1;
  position: relative;
  transition: flex-basis core-viewer-grid-variables.$transition-time ease-in,
    max-width core-viewer-grid-variables.$transition-time ease-in,
    min-width core-viewer-grid-variables.$transition-time ease-in;
  z-index: zindex.$viewer-grid-map-panel;

  .dso-filterblok-address {
    font-weight: bold;
    margin: units.$u1 0;
  }

  .main {
    height: 100%;
    overflow-y: scroll;
    padding: 0 css-grid.$grid-gutter-width * 0.5 units.$u1;
  }
}

.sizing-buttons {
  left: calc(100% + 1px);
  overflow-x: hidden;
  padding: 0 units.$u1 * 0.5 units.$u1 * 0.5 0;
  position: absolute;
  top: core-viewer-grid-variables.$sizing-buttons-top;
  transition: left core-viewer-grid-variables.$transition-time ease-in;
  width: core-viewer-grid-variables.$resize-button-size + units.$u1 * 0.5;
  z-index: zindex.$viewer-grid-sizing-buttons;

  button {
    @include button.secondary($modifiers: false, $icon-only: true);
    @include button.map-focus();

    border: 0;
    padding: 8px;
    border-radius: 0;
    border-bottom-right-radius: 4px;
    border-top-right-radius: 4px;
    box-shadow: 0 1px units.$u1 * 0.5 0 rgba(0, 0, 0, 0.4);
    flex: 0 0 100%;
    height: core-viewer-grid-variables.$resize-button-size;
    min-width: auto;
    width: core-viewer-grid-variables.$resize-button-size;

    &:hover {
      dso-icon {
        color: colors.$wit;
      }
    }
  }
}

.map {
  height: 100%;
  width: 100%;
  overflow: hidden;
}

#filterpanel,
.overlay {
  background-color: colors.$wit;
  height: 100%;
  overflow-y: auto;
  position: absolute;
  z-index: zindex.$viewer-grid-map-panel + 1;
}

#filterpanel {
  box-shadow: 2px 0 5px colors.$grijs-60;
  padding: units.$u5 css-grid.$grid-gutter-width * 0.5 units.$u1;
  left: 0;
  max-width: core-viewer-grid-variables.$filterpanel-max-width;
  width: calc(100vw - 40px);

  @media screen and (max-width: core-viewer-grid-variables.$filterpanel-width) {
    width: 100vw;

    &::before {
      display: none !important;
    }
  }

  &::before {
    content: "";
    display: block;
    position: fixed;
    top: 0;
    bottom: 0;
    right: 0;
    left: core-viewer-grid-variables.$filterpanel-max-width;
    background-color: rgba(0, 0, 0, 0.5);

    @media screen and (max-width: #{core-viewer-grid-variables.$filterpanel-max-width + 40px}) {
      left: auto;
      width: 40px;
    }
  }
}

.overlay {
  box-shadow: -2px 0 5px colors.$grijs-60;
  padding: units.$u5 css-grid.$grid-gutter-width * 0.5 units.$u1;
  right: 0;
  width: core-viewer-grid-variables.$overlay-width;

  @media screen and (max-width: core-viewer-grid-variables.$overlay-width) {
    width: 100vw;
  }
}

.dimscreen {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: core-viewer-grid-variables.$overlay-width;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: zindex.$viewer-grid-map-panel + 2;
}

.filterpanel-buttons {
  text-align: right;

  .cancel-button {
    @include button.secondary($modifiers: false);
    @include button.small();
  }

  .apply-button {
    @include button.primary($modifiers: false);
    @include button.small();
  }

  .cancel-button + .apply-button {
    margin-left: units.$u2;
  }
}
