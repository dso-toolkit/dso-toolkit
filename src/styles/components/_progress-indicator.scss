$dso-progress-indicator-border-color: $grasgroen;
$dso-progress-indicator-looping-time: 2s;
$dso-progress-indicator-looping-duration: infinite;

$dso-progress-indicator-timed-durations: 1, 2, 5, 10, 30, 60 !default;

.dso-progress-indicator {
  .dso-progress-indicator-spinner {
    display: inline-block;
    margin: 0 $u2 0 0;
    position: relative;
    vertical-align: middle;
  }
}

@mixin dso-progress-indicator-looping-dims($dso-progress-indicator-name, $dso-progress-indicator-size, $dso-progress-indicator-border-width) {
  &.dso-#{$dso-progress-indicator-name} {
    line-height: $dso-progress-indicator-size;

    .dso-progress-indicator-spinner {
      box-shadow: inset 0 0 0 $dso-progress-indicator-border-width;
      height: $dso-progress-indicator-size;
      width: $dso-progress-indicator-size;

      &::before {
        border-radius: #{$dso-progress-indicator-size + $dso-progress-indicator-border-width} 0 0 #{$dso-progress-indicator-size + $dso-progress-indicator-border-width};
        height: #{$dso-progress-indicator-size + $dso-progress-indicator-border-width};
        left: -#{$dso-progress-indicator-border-width / 2};
        top: -#{$dso-progress-indicator-border-width / 2};
        transform-origin: #{$dso-progress-indicator-size / 2 + $dso-progress-indicator-border-width / 2} #{$dso-progress-indicator-size / 2 + $dso-progress-indicator-border-width / 2};
        width:  #{$dso-progress-indicator-size / 2 + $dso-progress-indicator-border-width};
      }

      &::after {
        border-radius: 0 #{$dso-progress-indicator-size + $dso-progress-indicator-border-width} #{$dso-progress-indicator-size + $dso-progress-indicator-border-width} 0;
        height: #{$dso-progress-indicator-size + $dso-progress-indicator-border-width};
        left:  #{$dso-progress-indicator-size / 2 - $dso-progress-indicator-border-width / 2};
        top: -#{$dso-progress-indicator-border-width / 2};
        transform-origin: #{$dso-progress-indicator-border-width / 2}  #{$dso-progress-indicator-size / 2 + $dso-progress-indicator-border-width / 2};
        width:  #{$dso-progress-indicator-size / 2 + $dso-progress-indicator-border-width};
      }
    }
  }
}

.dso-progress-indicator-looping {
  .dso-progress-indicator-spinner {
    color: $dso-progress-indicator-border-color;
    transform: translateZ(0);

    &,
    &::before,
    &::after {
      border-radius: 50%;
    }

    &::before,
    &::after {
      content: "";
      position: absolute;
    }

    &::before {
      animation: rotation $dso-progress-indicator-looping-time ease $dso-progress-indicator-looping-duration 1.5s;
      background: $wit;
    }

    &::after {
      animation: rotation $dso-progress-indicator-looping-time ease $dso-progress-indicator-looping-duration;
      background: $wit;
    }
  }

  &.dso-small,
  &:not(.dso-medium):not(.dso-large) {
    @include dso-progress-indicator-looping-dims(small, 24px, 2px);
  }

  &.dso-medium {
    @include dso-progress-indicator-looping-dims(medium, 32px, 3px);
  }

  &.dso-large {
    @include dso-progress-indicator-looping-dims(large, 48px, 4px);
  }
}

@mixin dso-progress-indicator-timed-dims($dso-progress-indicator-name, $dso-progress-indicator-size, $dso-progress-indicator-border-width) {
  &.dso-#{$dso-progress-indicator-name} {
    line-height: $dso-progress-indicator-size;

    .dso-progress-indicator-spinner {
      height: $dso-progress-indicator-size;
      width: $dso-progress-indicator-size;

      &::after,
      &::before {
        border: $dso-progress-indicator-border-width solid $dso-progress-indicator-border-color;
        height: #{$dso-progress-indicator-size};
        transform-origin: #{$dso-progress-indicator-size / 2} #{$dso-progress-indicator-size / 2};
        width: #{$dso-progress-indicator-size / 2};
      }

      &::before {
        border-radius: #{$dso-progress-indicator-size / 2} 0 0 #{$dso-progress-indicator-size / 2};
      }

      &::after {
        border-radius: 0 #{$dso-progress-indicator-size / 2} #{$dso-progress-indicator-size / 2} 0;
        left: #{$dso-progress-indicator-size / 2};
      }
    }

    span.dso-progress-indicator-spinner-mask {
      height: #{$dso-progress-indicator-size};
      width: #{$dso-progress-indicator-size / 2};
    }
  }
}

@mixin dso-progress-indicator-duration($dso-progress-indicator-duration) {
  &.dso-progress-indicator-duration-#{$dso-progress-indicator-duration}s {
    .dso-progress-indicator-spinner {
      &::before {
        animation: rota $dso-progress-indicator-duration + s linear;
      }

      &::after {
        animation: opa2 $dso-progress-indicator-duration + s steps(1, end) reverse;
      }
    }

    span.dso-progress-indicator-spinner-mask {
      animation: opa $dso-progress-indicator-duration + s steps(1, end);
    }
  }

  @keyframes rota {
    0% {
      transform: rotate(0deg);
    }

    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes opa {
    .01% {
      opacity: 1;
    }

    50%,
    100% {
      opacity: 0;
    }
  }

  @keyframes opa2 {
    .01%,
    100% {
      opacity: 1;
    }

    50% {
      opacity: 0;
    }
  }
}

.dso-progress-indicator-timed {
  .dso-progress-indicator-spinner {
    &::after,
    &::before {
      background: $wit;
      content: "";
      position: absolute;
    }

    &::before {
      border-right: 0 !important;
      z-index: 200;
    }

    &::after {
      border-left: 0 !important;
      opacity: 1;
      z-index: 100;
    }
  }

  span.dso-progress-indicator-spinner-mask {
    background: $wit;
    display: block;
    opacity: 0;
    position: absolute;
    z-index: 300;
  }

  &.dso-small,
  &:not(.dso-medium):not(.dso-large) {
    @include dso-progress-indicator-timed-dims(small, 24px, 2px);
  }

  &.dso-medium {
    @include dso-progress-indicator-timed-dims(medium, 32px, 3px);
  }

  &.dso-large {
    @include dso-progress-indicator-timed-dims(large, 48px, 4px);
  }

  @each $val in $dso-progress-indicator-timed-durations {
    @include dso-progress-indicator-duration($val);
  }
}

span.dso-progress-indicator-label {
  vertical-align: middle;
}

@keyframes rotation {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

