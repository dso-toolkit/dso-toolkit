diff --git a/node_modules/@whitespace/storybook-addon-html/dist/esm/Panel.js b/node_modules/@whitespace/storybook-addon-html/dist/esm/Panel.js
index 0d26a69..6d7405c 100644
--- a/node_modules/@whitespace/storybook-addon-html/dist/esm/Panel.js
+++ b/node_modules/@whitespace/storybook-addon-html/dist/esm/Panel.js
@@ -10,13 +10,13 @@ function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o =
 function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
 function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
 function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
-import React, { useMemo } from "react";
-import { useAddonState, useChannel, useParameter } from "@storybook/api";
+import React, { useState, useEffect } from "react";
+import { useAddonState, useChannel, useParameter } from "@storybook/manager-api";
 import { AddonPanel } from "@storybook/components";
 import { ADDON_ID, EVENTS, PARAM_KEY } from "./constants";
 import { PanelContent } from "./components/PanelContent";
 import { format as prettierFormat } from "prettier/standalone";
-import prettierHtml from "prettier/parser-html";
+import * as prettierHtml from "prettier/plugins/html";
 export var Panel = function Panel(props) {
   // https://storybook.js.org/docs/react/addons/addons-api#useaddonstate
   var _useAddonState = useAddonState(ADDON_ID, {
@@ -51,9 +51,17 @@ export var Panel = function Panel(props) {
     parser: "html",
     plugins: [prettierHtml]
   });
-  var formattedCode = useMemo(function () {
-    return code && prettierFormat(code, prettierConfig);
-  }, [code, prettierConfig]);
+  const [formattedCode, setFormattedCode] = useState(null);
+  useEffect(
+    () => {
+      const formatCode = async () => {
+        const prettierFormattedCode = code && await prettierFormat(code, prettierConfig);
+        setFormattedCode(prettierFormattedCode);
+      }
+      formatCode().catch(e => console.error(e));
+    },
+    [code, prettierConfig],
+  );
   return /*#__PURE__*/React.createElement(AddonPanel, props, /*#__PURE__*/React.createElement(PanelContent, {
     code: formattedCode,
     showLineNumbers: showLineNumbers,
diff --git a/node_modules/@whitespace/storybook-addon-html/preset.js b/node_modules/@whitespace/storybook-addon-html/preset.js
index aca6ca4..f23183d 100644
--- a/node_modules/@whitespace/storybook-addon-html/preset.js
+++ b/node_modules/@whitespace/storybook-addon-html/preset.js
@@ -1,7 +1,3 @@
-function config(entry = []) {
-  return [...entry, require.resolve("./dist/esm/preset/preview")];
-}
-
 function managerEntries(entry = []) {
   return [...entry, require.resolve("./dist/esm/preset/manager")];
 }
@@ -12,6 +8,5 @@ function previewAnnotations(entry = []) {
 
 module.exports = {
   managerEntries,
-  config,
   previewAnnotations,
 };
